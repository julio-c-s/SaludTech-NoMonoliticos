version: '3.8'

services:
  pulsar:
    image: apachepulsar/pulsar:latest
    container_name: pulsar
    command: ["bin/pulsar", "standalone"]
    ports:
      - "6650:6650"
      - "8080:8080"
    environment:
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=512m
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: cd_procesador.Dockerfile   # Dockerfile para el microservicio SaludTech
    container_name: procesador
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_APP=src/saludtech/api
      - PULSAR_SERVICE_URL=pulsar://pulsar:6650
    depends_on:
      - pulsar
    command: flask run --host=0.0.0.0
    restart: unless-stopped

  clients:
    build:
      context: .
      dockerfile: cd_clientes.Dockerfile      # Dockerfile para el microservicio Clientes
    container_name: clients
    ports:
      - "5002:5000"
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - FLASK_APP=src/clients/api
      - PULSAR_SERVICE_URL=pulsar://pulsar:6650
    depends_on:
      - pulsar
    command: flask run --host=0.0.0.0
    restart: unless-stopped

  anonimizador:
    build:
      context: .
      dockerfile: cd_anonimizador.Dockerfile   # Dockerfile para el microservicio Anonimizador
    container_name: anonimizador
    ports:
      - "5004:5000"   # Se cambi√≥ de "5001:5000" para evitar conflicto
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - FLASK_APP=src/anonimizador/api
      - PULSAR_SERVICE_URL=pulsar://pulsar:6650
    depends_on:
      - pulsar
    command: flask run --host=0.0.0.0
    restart: unless-stopped

  notificador:
    build:
      context: .
      dockerfile: cd_notificador.Dockerfile   # Dockerfile para el microservicio Notificador
    container_name: notificador
    ports:
      - "5003:5000"
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - FLASK_APP=src/notificador/api
      - PULSAR_SERVICE_URL=pulsar://pulsar:6650
    depends_on:
      - pulsar
    command: flask run --host=0.0.0.0
    restart: unless-stopped
